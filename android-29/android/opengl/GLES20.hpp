#pragma once

#include "../../__JniBaseClass.hpp"

namespace java::nio
{
	class Buffer;
}
namespace java::nio
{
	class FloatBuffer;
}
namespace java::nio
{
	class IntBuffer;
}

namespace android::opengl
{
	class GLES20 : public __JniBaseClass
	{
	public:
		// Fields
		static jint GL_ACTIVE_ATTRIBUTES();
		static jint GL_ACTIVE_ATTRIBUTE_MAX_LENGTH();
		static jint GL_ACTIVE_TEXTURE();
		static jint GL_ACTIVE_UNIFORMS();
		static jint GL_ACTIVE_UNIFORM_MAX_LENGTH();
		static jint GL_ALIASED_LINE_WIDTH_RANGE();
		static jint GL_ALIASED_POINT_SIZE_RANGE();
		static jint GL_ALPHA();
		static jint GL_ALPHA_BITS();
		static jint GL_ALWAYS();
		static jint GL_ARRAY_BUFFER();
		static jint GL_ARRAY_BUFFER_BINDING();
		static jint GL_ATTACHED_SHADERS();
		static jint GL_BACK();
		static jint GL_BLEND();
		static jint GL_BLEND_COLOR();
		static jint GL_BLEND_DST_ALPHA();
		static jint GL_BLEND_DST_RGB();
		static jint GL_BLEND_EQUATION();
		static jint GL_BLEND_EQUATION_ALPHA();
		static jint GL_BLEND_EQUATION_RGB();
		static jint GL_BLEND_SRC_ALPHA();
		static jint GL_BLEND_SRC_RGB();
		static jint GL_BLUE_BITS();
		static jint GL_BOOL();
		static jint GL_BOOL_VEC2();
		static jint GL_BOOL_VEC3();
		static jint GL_BOOL_VEC4();
		static jint GL_BUFFER_SIZE();
		static jint GL_BUFFER_USAGE();
		static jint GL_BYTE();
		static jint GL_CCW();
		static jint GL_CLAMP_TO_EDGE();
		static jint GL_COLOR_ATTACHMENT0();
		static jint GL_COLOR_BUFFER_BIT();
		static jint GL_COLOR_CLEAR_VALUE();
		static jint GL_COLOR_WRITEMASK();
		static jint GL_COMPILE_STATUS();
		static jint GL_COMPRESSED_TEXTURE_FORMATS();
		static jint GL_CONSTANT_ALPHA();
		static jint GL_CONSTANT_COLOR();
		static jint GL_CULL_FACE();
		static jint GL_CULL_FACE_MODE();
		static jint GL_CURRENT_PROGRAM();
		static jint GL_CURRENT_VERTEX_ATTRIB();
		static jint GL_CW();
		static jint GL_DECR();
		static jint GL_DECR_WRAP();
		static jint GL_DELETE_STATUS();
		static jint GL_DEPTH_ATTACHMENT();
		static jint GL_DEPTH_BITS();
		static jint GL_DEPTH_BUFFER_BIT();
		static jint GL_DEPTH_CLEAR_VALUE();
		static jint GL_DEPTH_COMPONENT();
		static jint GL_DEPTH_COMPONENT16();
		static jint GL_DEPTH_FUNC();
		static jint GL_DEPTH_RANGE();
		static jint GL_DEPTH_TEST();
		static jint GL_DEPTH_WRITEMASK();
		static jint GL_DITHER();
		static jint GL_DONT_CARE();
		static jint GL_DST_ALPHA();
		static jint GL_DST_COLOR();
		static jint GL_DYNAMIC_DRAW();
		static jint GL_ELEMENT_ARRAY_BUFFER();
		static jint GL_ELEMENT_ARRAY_BUFFER_BINDING();
		static jint GL_EQUAL();
		static jint GL_EXTENSIONS();
		static jint GL_FALSE();
		static jint GL_FASTEST();
		static jint GL_FIXED();
		static jint GL_FLOAT();
		static jint GL_FLOAT_MAT2();
		static jint GL_FLOAT_MAT3();
		static jint GL_FLOAT_MAT4();
		static jint GL_FLOAT_VEC2();
		static jint GL_FLOAT_VEC3();
		static jint GL_FLOAT_VEC4();
		static jint GL_FRAGMENT_SHADER();
		static jint GL_FRAMEBUFFER();
		static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME();
		static jint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE();
		static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE();
		static jint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL();
		static jint GL_FRAMEBUFFER_BINDING();
		static jint GL_FRAMEBUFFER_COMPLETE();
		static jint GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT();
		static jint GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS();
		static jint GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT();
		static jint GL_FRAMEBUFFER_UNSUPPORTED();
		static jint GL_FRONT();
		static jint GL_FRONT_AND_BACK();
		static jint GL_FRONT_FACE();
		static jint GL_FUNC_ADD();
		static jint GL_FUNC_REVERSE_SUBTRACT();
		static jint GL_FUNC_SUBTRACT();
		static jint GL_GENERATE_MIPMAP_HINT();
		static jint GL_GEQUAL();
		static jint GL_GREATER();
		static jint GL_GREEN_BITS();
		static jint GL_HIGH_FLOAT();
		static jint GL_HIGH_INT();
		static jint GL_IMPLEMENTATION_COLOR_READ_FORMAT();
		static jint GL_IMPLEMENTATION_COLOR_READ_TYPE();
		static jint GL_INCR();
		static jint GL_INCR_WRAP();
		static jint GL_INFO_LOG_LENGTH();
		static jint GL_INT();
		static jint GL_INT_VEC2();
		static jint GL_INT_VEC3();
		static jint GL_INT_VEC4();
		static jint GL_INVALID_ENUM();
		static jint GL_INVALID_FRAMEBUFFER_OPERATION();
		static jint GL_INVALID_OPERATION();
		static jint GL_INVALID_VALUE();
		static jint GL_INVERT();
		static jint GL_KEEP();
		static jint GL_LEQUAL();
		static jint GL_LESS();
		static jint GL_LINEAR();
		static jint GL_LINEAR_MIPMAP_LINEAR();
		static jint GL_LINEAR_MIPMAP_NEAREST();
		static jint GL_LINES();
		static jint GL_LINE_LOOP();
		static jint GL_LINE_STRIP();
		static jint GL_LINE_WIDTH();
		static jint GL_LINK_STATUS();
		static jint GL_LOW_FLOAT();
		static jint GL_LOW_INT();
		static jint GL_LUMINANCE();
		static jint GL_LUMINANCE_ALPHA();
		static jint GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS();
		static jint GL_MAX_CUBE_MAP_TEXTURE_SIZE();
		static jint GL_MAX_FRAGMENT_UNIFORM_VECTORS();
		static jint GL_MAX_RENDERBUFFER_SIZE();
		static jint GL_MAX_TEXTURE_IMAGE_UNITS();
		static jint GL_MAX_TEXTURE_SIZE();
		static jint GL_MAX_VARYING_VECTORS();
		static jint GL_MAX_VERTEX_ATTRIBS();
		static jint GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS();
		static jint GL_MAX_VERTEX_UNIFORM_VECTORS();
		static jint GL_MAX_VIEWPORT_DIMS();
		static jint GL_MEDIUM_FLOAT();
		static jint GL_MEDIUM_INT();
		static jint GL_MIRRORED_REPEAT();
		static jint GL_NEAREST();
		static jint GL_NEAREST_MIPMAP_LINEAR();
		static jint GL_NEAREST_MIPMAP_NEAREST();
		static jint GL_NEVER();
		static jint GL_NICEST();
		static jint GL_NONE();
		static jint GL_NOTEQUAL();
		static jint GL_NO_ERROR();
		static jint GL_NUM_COMPRESSED_TEXTURE_FORMATS();
		static jint GL_NUM_SHADER_BINARY_FORMATS();
		static jint GL_ONE();
		static jint GL_ONE_MINUS_CONSTANT_ALPHA();
		static jint GL_ONE_MINUS_CONSTANT_COLOR();
		static jint GL_ONE_MINUS_DST_ALPHA();
		static jint GL_ONE_MINUS_DST_COLOR();
		static jint GL_ONE_MINUS_SRC_ALPHA();
		static jint GL_ONE_MINUS_SRC_COLOR();
		static jint GL_OUT_OF_MEMORY();
		static jint GL_PACK_ALIGNMENT();
		static jint GL_POINTS();
		static jint GL_POLYGON_OFFSET_FACTOR();
		static jint GL_POLYGON_OFFSET_FILL();
		static jint GL_POLYGON_OFFSET_UNITS();
		static jint GL_RED_BITS();
		static jint GL_RENDERBUFFER();
		static jint GL_RENDERBUFFER_ALPHA_SIZE();
		static jint GL_RENDERBUFFER_BINDING();
		static jint GL_RENDERBUFFER_BLUE_SIZE();
		static jint GL_RENDERBUFFER_DEPTH_SIZE();
		static jint GL_RENDERBUFFER_GREEN_SIZE();
		static jint GL_RENDERBUFFER_HEIGHT();
		static jint GL_RENDERBUFFER_INTERNAL_FORMAT();
		static jint GL_RENDERBUFFER_RED_SIZE();
		static jint GL_RENDERBUFFER_STENCIL_SIZE();
		static jint GL_RENDERBUFFER_WIDTH();
		static jint GL_RENDERER();
		static jint GL_REPEAT();
		static jint GL_REPLACE();
		static jint GL_RGB();
		static jint GL_RGB565();
		static jint GL_RGB5_A1();
		static jint GL_RGBA();
		static jint GL_RGBA4();
		static jint GL_SAMPLER_2D();
		static jint GL_SAMPLER_CUBE();
		static jint GL_SAMPLES();
		static jint GL_SAMPLE_ALPHA_TO_COVERAGE();
		static jint GL_SAMPLE_BUFFERS();
		static jint GL_SAMPLE_COVERAGE();
		static jint GL_SAMPLE_COVERAGE_INVERT();
		static jint GL_SAMPLE_COVERAGE_VALUE();
		static jint GL_SCISSOR_BOX();
		static jint GL_SCISSOR_TEST();
		static jint GL_SHADER_BINARY_FORMATS();
		static jint GL_SHADER_COMPILER();
		static jint GL_SHADER_SOURCE_LENGTH();
		static jint GL_SHADER_TYPE();
		static jint GL_SHADING_LANGUAGE_VERSION();
		static jint GL_SHORT();
		static jint GL_SRC_ALPHA();
		static jint GL_SRC_ALPHA_SATURATE();
		static jint GL_SRC_COLOR();
		static jint GL_STATIC_DRAW();
		static jint GL_STENCIL_ATTACHMENT();
		static jint GL_STENCIL_BACK_FAIL();
		static jint GL_STENCIL_BACK_FUNC();
		static jint GL_STENCIL_BACK_PASS_DEPTH_FAIL();
		static jint GL_STENCIL_BACK_PASS_DEPTH_PASS();
		static jint GL_STENCIL_BACK_REF();
		static jint GL_STENCIL_BACK_VALUE_MASK();
		static jint GL_STENCIL_BACK_WRITEMASK();
		static jint GL_STENCIL_BITS();
		static jint GL_STENCIL_BUFFER_BIT();
		static jint GL_STENCIL_CLEAR_VALUE();
		static jint GL_STENCIL_FAIL();
		static jint GL_STENCIL_FUNC();
		static jint GL_STENCIL_INDEX();
		static jint GL_STENCIL_INDEX8();
		static jint GL_STENCIL_PASS_DEPTH_FAIL();
		static jint GL_STENCIL_PASS_DEPTH_PASS();
		static jint GL_STENCIL_REF();
		static jint GL_STENCIL_TEST();
		static jint GL_STENCIL_VALUE_MASK();
		static jint GL_STENCIL_WRITEMASK();
		static jint GL_STREAM_DRAW();
		static jint GL_SUBPIXEL_BITS();
		static jint GL_TEXTURE();
		static jint GL_TEXTURE0();
		static jint GL_TEXTURE1();
		static jint GL_TEXTURE10();
		static jint GL_TEXTURE11();
		static jint GL_TEXTURE12();
		static jint GL_TEXTURE13();
		static jint GL_TEXTURE14();
		static jint GL_TEXTURE15();
		static jint GL_TEXTURE16();
		static jint GL_TEXTURE17();
		static jint GL_TEXTURE18();
		static jint GL_TEXTURE19();
		static jint GL_TEXTURE2();
		static jint GL_TEXTURE20();
		static jint GL_TEXTURE21();
		static jint GL_TEXTURE22();
		static jint GL_TEXTURE23();
		static jint GL_TEXTURE24();
		static jint GL_TEXTURE25();
		static jint GL_TEXTURE26();
		static jint GL_TEXTURE27();
		static jint GL_TEXTURE28();
		static jint GL_TEXTURE29();
		static jint GL_TEXTURE3();
		static jint GL_TEXTURE30();
		static jint GL_TEXTURE31();
		static jint GL_TEXTURE4();
		static jint GL_TEXTURE5();
		static jint GL_TEXTURE6();
		static jint GL_TEXTURE7();
		static jint GL_TEXTURE8();
		static jint GL_TEXTURE9();
		static jint GL_TEXTURE_2D();
		static jint GL_TEXTURE_BINDING_2D();
		static jint GL_TEXTURE_BINDING_CUBE_MAP();
		static jint GL_TEXTURE_CUBE_MAP();
		static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_X();
		static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Y();
		static jint GL_TEXTURE_CUBE_MAP_NEGATIVE_Z();
		static jint GL_TEXTURE_CUBE_MAP_POSITIVE_X();
		static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Y();
		static jint GL_TEXTURE_CUBE_MAP_POSITIVE_Z();
		static jint GL_TEXTURE_MAG_FILTER();
		static jint GL_TEXTURE_MIN_FILTER();
		static jint GL_TEXTURE_WRAP_S();
		static jint GL_TEXTURE_WRAP_T();
		static jint GL_TRIANGLES();
		static jint GL_TRIANGLE_FAN();
		static jint GL_TRIANGLE_STRIP();
		static jint GL_TRUE();
		static jint GL_UNPACK_ALIGNMENT();
		static jint GL_UNSIGNED_BYTE();
		static jint GL_UNSIGNED_INT();
		static jint GL_UNSIGNED_SHORT();
		static jint GL_UNSIGNED_SHORT_4_4_4_4();
		static jint GL_UNSIGNED_SHORT_5_5_5_1();
		static jint GL_UNSIGNED_SHORT_5_6_5();
		static jint GL_VALIDATE_STATUS();
		static jint GL_VENDOR();
		static jint GL_VERSION();
		static jint GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING();
		static jint GL_VERTEX_ATTRIB_ARRAY_ENABLED();
		static jint GL_VERTEX_ATTRIB_ARRAY_NORMALIZED();
		static jint GL_VERTEX_ATTRIB_ARRAY_POINTER();
		static jint GL_VERTEX_ATTRIB_ARRAY_SIZE();
		static jint GL_VERTEX_ATTRIB_ARRAY_STRIDE();
		static jint GL_VERTEX_ATTRIB_ARRAY_TYPE();
		static jint GL_VERTEX_SHADER();
		static jint GL_VIEWPORT();
		static jint GL_ZERO();
		
		GLES20(QAndroidJniObject obj);
		// Constructors
		GLES20();
		
		// Methods
		static void glActiveTexture(jint arg0);
		static void glAttachShader(jint arg0, jint arg1);
		static void glBindAttribLocation(jint arg0, jint arg1, jstring arg2);
		static void glBindBuffer(jint arg0, jint arg1);
		static void glBindFramebuffer(jint arg0, jint arg1);
		static void glBindRenderbuffer(jint arg0, jint arg1);
		static void glBindTexture(jint arg0, jint arg1);
		static void glBlendColor(jfloat arg0, jfloat arg1, jfloat arg2, jfloat arg3);
		static void glBlendEquation(jint arg0);
		static void glBlendEquationSeparate(jint arg0, jint arg1);
		static void glBlendFunc(jint arg0, jint arg1);
		static void glBlendFuncSeparate(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glBufferData(jint arg0, jint arg1, java::nio::Buffer arg2, jint arg3);
		static void glBufferSubData(jint arg0, jint arg1, jint arg2, java::nio::Buffer arg3);
		static jint glCheckFramebufferStatus(jint arg0);
		static void glClear(jint arg0);
		static void glClearColor(jfloat arg0, jfloat arg1, jfloat arg2, jfloat arg3);
		static void glClearDepthf(jfloat arg0);
		static void glClearStencil(jint arg0);
		static void glColorMask(jboolean arg0, jboolean arg1, jboolean arg2, jboolean arg3);
		static void glCompileShader(jint arg0);
		static void glCompressedTexImage2D(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, java::nio::Buffer arg7);
		static void glCompressedTexSubImage2D(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7, java::nio::Buffer arg8);
		static void glCopyTexImage2D(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7);
		static void glCopyTexSubImage2D(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7);
		static jint glCreateProgram();
		static jint glCreateShader(jint arg0);
		static void glCullFace(jint arg0);
		static void glDeleteBuffers(jint arg0, java::nio::IntBuffer arg1);
		static void glDeleteBuffers(jint arg0, jintArray arg1, jint arg2);
		static void glDeleteFramebuffers(jint arg0, java::nio::IntBuffer arg1);
		static void glDeleteFramebuffers(jint arg0, jintArray arg1, jint arg2);
		static void glDeleteProgram(jint arg0);
		static void glDeleteRenderbuffers(jint arg0, java::nio::IntBuffer arg1);
		static void glDeleteRenderbuffers(jint arg0, jintArray arg1, jint arg2);
		static void glDeleteShader(jint arg0);
		static void glDeleteTextures(jint arg0, java::nio::IntBuffer arg1);
		static void glDeleteTextures(jint arg0, jintArray arg1, jint arg2);
		static void glDepthFunc(jint arg0);
		static void glDepthMask(jboolean arg0);
		static void glDepthRangef(jfloat arg0, jfloat arg1);
		static void glDetachShader(jint arg0, jint arg1);
		static void glDisable(jint arg0);
		static void glDisableVertexAttribArray(jint arg0);
		static void glDrawArrays(jint arg0, jint arg1, jint arg2);
		static void glDrawElements(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glDrawElements(jint arg0, jint arg1, jint arg2, java::nio::Buffer arg3);
		static void glEnable(jint arg0);
		static void glEnableVertexAttribArray(jint arg0);
		static void glFinish();
		static void glFlush();
		static void glFramebufferRenderbuffer(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glFramebufferTexture2D(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4);
		static void glFrontFace(jint arg0);
		static void glGenBuffers(jint arg0, java::nio::IntBuffer arg1);
		static void glGenBuffers(jint arg0, jintArray arg1, jint arg2);
		static void glGenFramebuffers(jint arg0, java::nio::IntBuffer arg1);
		static void glGenFramebuffers(jint arg0, jintArray arg1, jint arg2);
		static void glGenRenderbuffers(jint arg0, java::nio::IntBuffer arg1);
		static void glGenRenderbuffers(jint arg0, jintArray arg1, jint arg2);
		static void glGenTextures(jint arg0, java::nio::IntBuffer arg1);
		static void glGenTextures(jint arg0, jintArray arg1, jint arg2);
		static void glGenerateMipmap(jint arg0);
		static jstring glGetActiveAttrib(jint arg0, jint arg1, java::nio::IntBuffer arg2, java::nio::IntBuffer arg3);
		static jstring glGetActiveAttrib(jint arg0, jint arg1, jintArray arg2, jint arg3, jintArray arg4, jint arg5);
		static void glGetActiveAttrib(jint arg0, jint arg1, jint arg2, jintArray arg3, jint arg4, jintArray arg5, jint arg6, jintArray arg7, jint arg8, jbyteArray arg9, jint arg10);
		static jstring glGetActiveUniform(jint arg0, jint arg1, java::nio::IntBuffer arg2, java::nio::IntBuffer arg3);
		static jstring glGetActiveUniform(jint arg0, jint arg1, jintArray arg2, jint arg3, jintArray arg4, jint arg5);
		static void glGetActiveUniform(jint arg0, jint arg1, jint arg2, jintArray arg3, jint arg4, jintArray arg5, jint arg6, jintArray arg7, jint arg8, jbyteArray arg9, jint arg10);
		static void glGetAttachedShaders(jint arg0, jint arg1, java::nio::IntBuffer arg2, java::nio::IntBuffer arg3);
		static void glGetAttachedShaders(jint arg0, jint arg1, jintArray arg2, jint arg3, jintArray arg4, jint arg5);
		static jint glGetAttribLocation(jint arg0, jstring arg1);
		static void glGetBooleanv(jint arg0, java::nio::IntBuffer arg1);
		static void glGetBooleanv(jint arg0, jbooleanArray arg1, jint arg2);
		static void glGetBufferParameteriv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glGetBufferParameteriv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static jint glGetError();
		static void glGetFloatv(jint arg0, java::nio::FloatBuffer arg1);
		static void glGetFloatv(jint arg0, jfloatArray arg1, jint arg2);
		static void glGetFramebufferAttachmentParameteriv(jint arg0, jint arg1, jint arg2, java::nio::IntBuffer arg3);
		static void glGetFramebufferAttachmentParameteriv(jint arg0, jint arg1, jint arg2, jintArray arg3, jint arg4);
		static void glGetIntegerv(jint arg0, java::nio::IntBuffer arg1);
		static void glGetIntegerv(jint arg0, jintArray arg1, jint arg2);
		static jstring glGetProgramInfoLog(jint arg0);
		static void glGetProgramiv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glGetProgramiv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glGetRenderbufferParameteriv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glGetRenderbufferParameteriv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static jstring glGetShaderInfoLog(jint arg0);
		static void glGetShaderPrecisionFormat(jint arg0, jint arg1, java::nio::IntBuffer arg2, java::nio::IntBuffer arg3);
		static void glGetShaderPrecisionFormat(jint arg0, jint arg1, jintArray arg2, jint arg3, jintArray arg4, jint arg5);
		static jstring glGetShaderSource(jint arg0);
		static void glGetShaderSource(jint arg0, jint arg1, jintArray arg2, jint arg3, jbyteArray arg4, jint arg5);
		static void glGetShaderiv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glGetShaderiv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static jstring glGetString(jint arg0);
		static void glGetTexParameterfv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glGetTexParameterfv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glGetTexParameteriv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glGetTexParameteriv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static jint glGetUniformLocation(jint arg0, jstring arg1);
		static void glGetUniformfv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glGetUniformfv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glGetUniformiv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glGetUniformiv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glGetVertexAttribfv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glGetVertexAttribfv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glGetVertexAttribiv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glGetVertexAttribiv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glHint(jint arg0, jint arg1);
		static jboolean glIsBuffer(jint arg0);
		static jboolean glIsEnabled(jint arg0);
		static jboolean glIsFramebuffer(jint arg0);
		static jboolean glIsProgram(jint arg0);
		static jboolean glIsRenderbuffer(jint arg0);
		static jboolean glIsShader(jint arg0);
		static jboolean glIsTexture(jint arg0);
		static void glLineWidth(jfloat arg0);
		static void glLinkProgram(jint arg0);
		static void glPixelStorei(jint arg0, jint arg1);
		static void glPolygonOffset(jfloat arg0, jfloat arg1);
		static void glReadPixels(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, java::nio::Buffer arg6);
		static void glReleaseShaderCompiler();
		static void glRenderbufferStorage(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glSampleCoverage(jfloat arg0, jboolean arg1);
		static void glScissor(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glShaderBinary(jint arg0, java::nio::IntBuffer arg1, jint arg2, java::nio::Buffer arg3, jint arg4);
		static void glShaderBinary(jint arg0, jintArray arg1, jint arg2, jint arg3, java::nio::Buffer arg4, jint arg5);
		static void glShaderSource(jint arg0, jstring arg1);
		static void glStencilFunc(jint arg0, jint arg1, jint arg2);
		static void glStencilFuncSeparate(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glStencilMask(jint arg0);
		static void glStencilMaskSeparate(jint arg0, jint arg1);
		static void glStencilOp(jint arg0, jint arg1, jint arg2);
		static void glStencilOpSeparate(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glTexImage2D(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7, java::nio::Buffer arg8);
		static void glTexParameterf(jint arg0, jint arg1, jfloat arg2);
		static void glTexParameterfv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glTexParameterfv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glTexParameteri(jint arg0, jint arg1, jint arg2);
		static void glTexParameteriv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glTexParameteriv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glTexSubImage2D(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4, jint arg5, jint arg6, jint arg7, java::nio::Buffer arg8);
		static void glUniform1f(jint arg0, jfloat arg1);
		static void glUniform1fv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glUniform1fv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glUniform1i(jint arg0, jint arg1);
		static void glUniform1iv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glUniform1iv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glUniform2f(jint arg0, jfloat arg1, jfloat arg2);
		static void glUniform2fv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glUniform2fv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glUniform2i(jint arg0, jint arg1, jint arg2);
		static void glUniform2iv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glUniform2iv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glUniform3f(jint arg0, jfloat arg1, jfloat arg2, jfloat arg3);
		static void glUniform3fv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glUniform3fv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glUniform3i(jint arg0, jint arg1, jint arg2, jint arg3);
		static void glUniform3iv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glUniform3iv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glUniform4f(jint arg0, jfloat arg1, jfloat arg2, jfloat arg3, jfloat arg4);
		static void glUniform4fv(jint arg0, jint arg1, java::nio::FloatBuffer arg2);
		static void glUniform4fv(jint arg0, jint arg1, jfloatArray arg2, jint arg3);
		static void glUniform4i(jint arg0, jint arg1, jint arg2, jint arg3, jint arg4);
		static void glUniform4iv(jint arg0, jint arg1, java::nio::IntBuffer arg2);
		static void glUniform4iv(jint arg0, jint arg1, jintArray arg2, jint arg3);
		static void glUniformMatrix2fv(jint arg0, jint arg1, jboolean arg2, java::nio::FloatBuffer arg3);
		static void glUniformMatrix2fv(jint arg0, jint arg1, jboolean arg2, jfloatArray arg3, jint arg4);
		static void glUniformMatrix3fv(jint arg0, jint arg1, jboolean arg2, java::nio::FloatBuffer arg3);
		static void glUniformMatrix3fv(jint arg0, jint arg1, jboolean arg2, jfloatArray arg3, jint arg4);
		static void glUniformMatrix4fv(jint arg0, jint arg1, jboolean arg2, java::nio::FloatBuffer arg3);
		static void glUniformMatrix4fv(jint arg0, jint arg1, jboolean arg2, jfloatArray arg3, jint arg4);
		static void glUseProgram(jint arg0);
		static void glValidateProgram(jint arg0);
		static void glVertexAttrib1f(jint arg0, jfloat arg1);
		static void glVertexAttrib1fv(jint arg0, java::nio::FloatBuffer arg1);
		static void glVertexAttrib1fv(jint arg0, jfloatArray arg1, jint arg2);
		static void glVertexAttrib2f(jint arg0, jfloat arg1, jfloat arg2);
		static void glVertexAttrib2fv(jint arg0, java::nio::FloatBuffer arg1);
		static void glVertexAttrib2fv(jint arg0, jfloatArray arg1, jint arg2);
		static void glVertexAttrib3f(jint arg0, jfloat arg1, jfloat arg2, jfloat arg3);
		static void glVertexAttrib3fv(jint arg0, java::nio::FloatBuffer arg1);
		static void glVertexAttrib3fv(jint arg0, jfloatArray arg1, jint arg2);
		static void glVertexAttrib4f(jint arg0, jfloat arg1, jfloat arg2, jfloat arg3, jfloat arg4);
		static void glVertexAttrib4fv(jint arg0, java::nio::FloatBuffer arg1);
		static void glVertexAttrib4fv(jint arg0, jfloatArray arg1, jint arg2);
		static void glVertexAttribPointer(jint arg0, jint arg1, jint arg2, jboolean arg3, jint arg4, jint arg5);
		static void glVertexAttribPointer(jint arg0, jint arg1, jint arg2, jboolean arg3, jint arg4, java::nio::Buffer arg5);
		static void glViewport(jint arg0, jint arg1, jint arg2, jint arg3);
	};
} // namespace android::opengl

